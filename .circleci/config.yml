version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Update android sdk
          command: |
              echo "y" | sdkmanager "tools" "emulator" "lldb;3.1" "extras;google;google_play_services" "extras;google;m2repository" "extras;android;m2repository" "build-tools;19.1.0" "build-tools;27.0.3" "platform-tools" "platforms;android-19" "platforms;android-27" "system-images;android-19;google_apis;armeabi-v7a"
              echo "y" | sdkmanager --update
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: Setup emulator
          command: echo "no" | avdmanager create avd -n test -k "system-images;android-19;google_apis;armeabi-v7a"
      - run:
          name: Launch emulator
          command: |
              export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
              emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on -use-system-libs -verbose
          background: true

      - run:
          name: Wait emulator
          command: |
              circle-android wait-for-boot
              adb shell input keyevent 82
      - run:
          name: Run Tests
          command: ./gradlew clean lint test check connectedCheck connectedAndroidTest  --info --stacktrace
      - run:
          name: Run Upload
          command: java -jar lib/codacy-coverage-reporter-4.0.1-assembly.jar report -l Java -r app/build/reports/coverage/debug/report.xml -t ${CodacyToken} --commit-uuid ${CIRCLE_SHA1}

      - run:
          name: Deploy Over GIT
          command: |
            ./gradlew assemble
            if [[ $(git --no-pager show -s --format='%an <%ae>' HEAD) != "circelCI <circelci@c0d3d3v.ml>" ]]; then
              cp app/build/outputs/apk/release/app-release-unsigned.apk install/ -f
              cp app/build/outputs/apk/debug/app-debug.apk install/ -f
              git config --global user.email "circelci@c0d3d3v.ml"
              git config --global user.name "circelCI"
              git add install/app-debug.apk
              git add install/app-release-unsigned.apk
              git commit -m "deploy new apk from circleCI"
              git push -u origin ${CIRCLE_BRANCH}
            fi
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/outputs/androidTest-results/connected
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples


